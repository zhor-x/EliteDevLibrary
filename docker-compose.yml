version: '3'

services:
  app:
    build: .
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app-api
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./src:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "8000:8000"
      - "443:443"
    volumes:
      - ./src:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network
  mysql:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'library'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'shop'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'root'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'secret'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - ./mysql:/var/lib/mysql
    networks:
      - app-network
  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 8080:80
    environment:
      MYSQL_ROOT_PASSWORD: 'secret'
      PMA_HOST: mysql
      UPLOAD_LIMIT: 500M
    networks:
      - app-network
  redis:
    image: redis:6.2.1-buster
    container_name: redis
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis/data:/data
    networks:
      - app-network
networks:
  app-network:
    driver: bridge
volumes:
  dbdata:
    driver: local

